# Build with
# docker build --build-arg UID=$(id -u) --build-arg GID=$(id -g)

FROM nvidia/cuda:10.1-base-ubuntu18.04

# git here https://stackoverflow.com/questions/50837605/git-install-fails-in-dockerfile
# Install some basic utilities
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    sudo \
    git \
    bzip2 \
    libx11-6 \
    libpng16-16 \ 
    libjpeg-turbo8 \ 
    libtiff5 \
 && rm -rf /var/lib/apt/lists/*

# Create a working directory
RUN mkdir /app
WORKDIR /app

ARG USER_ID
ARG GROUP_ID

# Create a non-root user and switch to it
RUN addgroup --gid $GROUP_ID user
RUN adduser --disabled-password --gecos '' --shell /bin/bash --uid $USER_ID --gid $GROUP_ID user \
 && chown -R user:user /app
RUN echo "user ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/90-user
USER user

# All users can use /home/user as their home directory
ENV HOME=/home/user
RUN chmod 777 /home/user

# Install Miniconda and Python 3.7
ENV CONDA_AUTO_UPDATE_CONDA=false
ENV PATH=/home/user/miniconda/bin:$PATH
RUN curl -sLo ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-py38_4.8.2-Linux-x86_64.sh \
 && chmod +x ~/miniconda.sh \
 && ~/miniconda.sh -b -p ~/miniconda \
 && rm ~/miniconda.sh \
 && conda install -y python==3.7.7 \
 && conda config --append channels conda-forge \
 && conda clean -ya

# CUDA 10.1-specific steps
RUN conda install -y -c pytorch \
    cudatoolkit=10.1 \
    "pytorch=1.4.0=py3.7_cuda10.1.243_cudnn7.6.3_0" \
    "torchvision=0.5.0=py37_cu101" \
    nodejs \
    ipyvolume \
 && conda clean -ya

ENV PATH=/home/user/.local/bin:$PATH

RUN pip install --user --no-cache jupyter notebook jupyterlab matplotlib ipykernel \
	numpy pandas pygame \
	jupyter_http_over_ws  \
	tensorboardX \ 
	seaborn \
        jupyterlab-git \
	sympy \
	jupyter-lsp \ 
	xeus-python==0.7.1 \ 
	ptvsd \
RUN jupyter labextension install --no-build @jupyter-widgets/jupyterlab-manager ipyvolume jupyter-threejs @jupyterlab/toc @jupyterlab/debugger @krassowski/jupyterlab-lsp && jupyter lab build

RUN pip install --user --no-cache python-language-server[all]

RUN mkdir -p /home/user/workspace/env && chmod -R a+rwx /home/user/workspace/

COPY carla.egg /home/user/workspace/env/carla.egg
USER root
RUN chmod -R a+rwx /home/user/workspace/
USER user
RUN easy_install /home/user/workspace/env/carla.egg
USER root
#RUN mkdir /home/user/.local && chmod a+rwx /home/user/.local
RUN mkdir -p /home/user/.local/share/jupyter && chmod a+rwx /home/user/.local/share/jupyter && mkdir -p /home/user/.jupyter/ && chmod a+rwx /home/user/.jupyter/

WORKDIR /home/user/workspace
EXPOSE 8888

RUN python -m ipykernel.kernelspec

USER user
RUN echo "c.NotebookApp.password='sha1:8e2833f259b0:5d009ee10e42b5bcd9bbee996c446b8536406589'">>/home/user/.jupyter/jupyter_notebook_config.py

CMD ["bash", "-c", "source /etc/bash.bashrc && jupyter lab --notebook-dir=/home/user/workspace --ip 0.0.0.0 --no-browser --allow-root"]
